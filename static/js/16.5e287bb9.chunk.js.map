{"version":3,"sources":["nft/utils/toSignificant.ts","nft/utils/date.ts","nft/components/explore/CollectionTable.tsx","nft/components/explore/Explore.css.ts","nft/components/explore/ActivityFeed.tsx","nft/components/explore/Banner.tsx","nft/components/explore/Cells/Cells.tsx","nft/components/explore/Table.tsx","nft/components/explore/Cells/Cells.css.ts","nft/components/explore/TrendingCollections.tsx","nft/pages/explore/index.tsx"],"names":["nFormat","num","digits","lookup","value","symbol","rx","item","slice","reverse","find","toFixed","replace","toSignificant","n","precision","floatBal","parseFloat","toPrecision","formatChange","v","isValidDate","date","d","Date","parse","toString","isNaN","getTimeDifference","eventTimestamp","getTime","diff","days","Math","floor","hours","minutes","ColumnHeaders","section","ActivityRow","event","index","current","navigate","useNavigate","formattedPrice","useMemo","price","putCommas","formatEthPrice","scrollPosition","itemHeight","className","clsx","paddingTop","paddingBottom","fontSize","width","paddingLeft","style","transform","onClick","e","preventDefault","stopPropagation","collectionAddress","tokenId","Box","as","src","tokenMetadata","imageUrl","borderRadius","marginRight","height","color","ActivityEventTypeDisplay","eventType","paddingRight","marketplace","ActivityFeed","address","useState","setCurrent","useReducer","state","hovered","toggleHover","collectionActivity","useQuery","ActivityFetcher","staleTime","data","useEffect","interval","setInterval","events","length","clearInterval","overflow","onMouseEnter","onMouseLeave","marginTop","background","display","flexDirection","flexWrap","padding","maxWidth","position","map","activityEvent","MarketplaceIcon","alt","queryClient","QueryClient","Banner","random","setHover","windowWidth","useWindowSize","collections","fetchTrendingCollections","volumeType","timePeriod","TimePeriod","OneDay","size","refetchOnReconnect","refetchOnWindowFocus","refetchOnMount","stale","a","nextCollectionIndex","nextCollectionAddress","prefetchQuery","cursor","to","textDecoration","backgroundImage","bannerImageUrl","styles","collection","rank","breakpoints","lg","currentIndex","CollectionDetails","headlineLarge","name","isVerified","bodySmall","floorChange","marginLeft","volume","volumeChange","buttonMedium","backgroundColor","vars","blue400","grey700","CarouselProgress","Array","fill","carouselIndex","WithCommaCell","VolumeCell","justifyContent","ethNumberStandardFormatter","EthWithDayChange","gap","change","fontWeight","WeiWithDayChange","formatWeiToDecimal","CommaWithDayChange","Table","columns","hiddenColumns","classNames","props","useTable","initialState","sortBy","desc","id","Volume","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","setHiddenColumns","isMobile","headerGroup","getHeaderGroupProps","key","headers","column","getHeaderProps","getSortByToggleProps","textAlign","isSorted","isSortedDesc","render","row","i","getRowProps","original","cells","cell","cellIndex","td","getCellProps","Header","accessor","Cell","logo","sortDescFirst","Floor","Sales","sales","Items","totalSupply","Owners","owners","CollectionTable","timeOptions","label","SevenDays","ThirtyDays","AllTime","TrendingCollections","setTimePeriod","refetchInterval","isSuccess","trendingCollections","type","ownersChange","headlineMedium","timeOption","NftExplore"],"mappings":"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","file":"static/js/16.5e287bb9.chunk.js","sourcesContent":["/**\n * Format number in human-readable way\n * @example\n * ```js\n * nFormat(134_256) // => 134K\n * ```\n * @param num number to format\n * @param digits digits after decimal point\n * @returns formatted number string\n */\nexport function nFormat(num: number, digits = 0): string {\n  const lookup = [\n    { value: 1, symbol: '' },\n    //{ value: 1e3, symbol: 'K' },\n    { value: 1e6, symbol: 'M' },\n    { value: 1e9, symbol: 'B' },\n    { value: 1e12, symbol: 'T' },\n    { value: 1e15, symbol: 'Qa' },\n    { value: 1e18, symbol: 'Qi' },\n  ]\n  const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/\n  const item = lookup\n    .slice()\n    .reverse()\n    .find((item) => num >= item.value)\n  return item ? (num / item.value).toFixed(digits).replace(rx, '$1') + item.symbol : '0'\n}\n\n/**\n * Rounds a number to significant 4-digit number\n * @param n number\n * @param precision\n * @returns formatted number\n */\nexport const toSignificant = (n: string, precision = 4): string => {\n  const floatBal = parseFloat(n)\n\n  if (floatBal > 9999) return nFormat(floatBal, 0)\n\n  return floatBal.toPrecision(precision)\n}\n\n/**\n * Formats percent change values\n * @param v number\n * @returns formatted number\n */\nexport const formatChange = (v: number) => {\n  if (v >= 98) return nFormat(v, 2)\n  else if (v <= 0.1) return v.toFixed(2)\n  else return v.toPrecision(2)\n}\n","export const isValidDate = (date: number): boolean => {\n  const d = Date.parse(date.toString())\n  return isNaN(d) ? false : true\n}\n\nexport const getTimeDifference = (eventTimestamp: string) => {\n  const date = new Date(eventTimestamp).getTime()\n  const diff = new Date().getTime() - date\n\n  const days = Math.floor(diff / (1000 * 60 * 60 * 24))\n  const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n  const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60))\n\n  if (days > 0) return `${days} day${days > 1 ? 's' : ''} ago`\n  if (hours > 0) return `${hours} hour${hours > 1 ? 's' : ''} ago`\n  if (minutes > 1) return `${minutes} minutes ago`\n  return 'Just now'\n}\n","import { CellProps, Column } from 'react-table'\n\nimport { CollectionTableColumn } from '../../types'\nimport {\n  CollectionTitleCell,\n  CommaWithDayChange,\n  EthWithDayChange,\n  WeiWithDayChange,\n  WithCommaCell,\n} from './Cells/Cells'\nimport { Table } from './Table'\n\nexport enum ColumnHeaders {\n  Volume = 'Volume',\n  Floor = 'Floor',\n  Sales = 'Sales',\n  Items = 'Items',\n  Owners = 'Owners',\n}\n\nconst columns: Column<CollectionTableColumn>[] = [\n  {\n    Header: 'Collection',\n    accessor: 'collection',\n    Cell: CollectionTitleCell,\n  },\n  {\n    id: ColumnHeaders.Volume,\n    Header: ColumnHeaders.Volume,\n    accessor: ({ volume }) => volume.value,\n    sortDescFirst: true,\n    Cell: function EthDayChanget(cell: CellProps<CollectionTableColumn>) {\n      return <EthWithDayChange value={cell.row.original.volume} />\n    },\n  },\n  {\n    id: ColumnHeaders.Floor,\n    Header: ColumnHeaders.Floor,\n    accessor: ({ floor }) => floor.value,\n    sortDescFirst: true,\n    Cell: function weiDayChange(cell: CellProps<CollectionTableColumn>) {\n      return <WeiWithDayChange value={cell.row.original.floor} />\n    },\n  },\n  {\n    id: ColumnHeaders.Sales,\n    Header: ColumnHeaders.Sales,\n    accessor: 'sales',\n    sortDescFirst: true,\n    Cell: function withCommaCell(cell: CellProps<CollectionTableColumn>) {\n      return <WithCommaCell value={{ value: cell.row.original.sales }} />\n    },\n  },\n  {\n    id: ColumnHeaders.Items,\n    Header: ColumnHeaders.Items,\n    accessor: 'totalSupply',\n    sortDescFirst: true,\n    Cell: function withCommaCell(cell: CellProps<CollectionTableColumn>) {\n      return <WithCommaCell value={{ value: cell.row.original.totalSupply }} />\n    },\n  },\n  {\n    Header: ColumnHeaders.Owners,\n    accessor: ({ owners }) => owners.value,\n    sortDescFirst: true,\n    Cell: function commaDayChange(cell: CellProps<CollectionTableColumn>) {\n      return <CommaWithDayChange value={cell.row.original.owners} />\n    },\n  },\n]\n\nconst CollectionTable = ({ data }: { data: CollectionTableColumn[] }) => {\n  return (\n    <>\n      <Table\n        hiddenColumns={[ColumnHeaders.Volume, ColumnHeaders.Owners, ColumnHeaders.Items, ColumnHeaders.Sales]}\n        {...{ data, columns }}\n      />\n    </>\n  )\n}\n\nexport default CollectionTable\n","import \"src/nft/css/sprinkles.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/sprinkles.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted/dist/vanilla-extract-webpack-plugin-extracted.cjs.js\"\nimport \"src/nft/css/common.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/common.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#H4sIAAAAAAAAE41UwY6bMBC95yusXa2USGsESZZsnFMvvfbQD6gMHogFsaltEjZV/71jh24x3Va5mZnnN+/NeEi+Zetd+3oUNfmxIKTQRoBhRGkFh8XPRfKeZkd9BhNAZW+sRlCnpXJgZjghLS9aEBGU905HOBnSHRdCqpqRbNsNJHvthhgUk+mOl9K9MZImmwjXxGRr5JpTNTNduvWyztwsKa1BSaAhZGnBy6Y2ulfia28qXsLq4PvyHqX3XP3Su1Yqf3UiQc0s773lndfp+z5QK68hcZsBxZDPOBgc5a2sFSMtVC6i1IHSGa5spc2JEVvyFpZZsn6Ja3eMFYAQGN3j3JRj5OHBl+i0lU5qLMALq9vegY9KZQEhaWwfRaAxbmhtuJBIstxnyTYXUD+Tx22+23z+RNInPO/zbY7nLE2TbPO0mrkav8ZeBgMdN0jnk/QCRSMdPXHb/F3vsaoqkpJ09buVnvP537DDnBKrnoJlYGTQJuTncRjKthcwkWrdW4sJ7I8Uk/BFCnfEYXZTW15Dbxm28AhGuluPw65QOKM4+8GCfY8m9OepT9WHPo2jGhG4C+sXS4DbIJae9PUumL0D9X8E1b2bOQi/iI99ZBHUTv4m07d1WypTX3K4ZtI/4V+iqJeToAQAAA==\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted/dist/vanilla-extract-webpack-plugin-extracted.cjs.js\"\nimport \"src/nft/components/explore/Explore.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/components/explore/Explore.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xbW9yN3ZlMSB7CiAgbWF4LXdpZHRoOiAxMDAwcHg7CiAgbWFyZ2luOiAwIGF1dG87CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogcm93OwogIGZsZXgtd3JhcDogbm93cmFwOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQouXzFtb3I3dmUzIHsKICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7CiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsKfQouXzFtb3I3dmU1IHsKICBoZWlnaHQ6IDM4NnB4Owp9Ci5fMW1vcjd2ZTcgewogIG1heC13aWR0aDogY2FsYygxMDAlIC0gODBweCk7Cn0KLl8xbW9yN3ZlYiB7CiAgYm9yZGVyLXJhZGl1czogNjRweDsKICBtYXgtd2lkdGg6IDE3MnB4Owp9Ci5fMW1vcjd2ZWQgewogIHdpZHRoOiAxNzZweDsKfQouXzFtb3I3dmVnIHsKICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC40cyBlYXNlOwp9Ci5fMW1vcjd2ZWwgewogIHZlcnRpY2FsLWFsaWduOiBib3R0b207Cn0KLl8xbW9yN3ZlbiB7CiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsKICBib3gtc2hhZG93OiAwIDAgMCAxcHggcmdiYSgxNTMsIDE2MSwgMTg5LCAwLjI0KTsKICBib3JkZXItc3BhY2luZzogMHB4IDQwcHg7Cn0KLl8xbW9yN3ZlcTpudGgtbGFzdC1jaGlsZCgxKSB7CiAgcGFkZGluZy1yaWdodDogMjBweDsKfQouXzFtb3I3dmV1IHsKICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOwp9Ci5fMW1vcjd2ZXU6bnRoLWxhc3QtY2hpbGQoMSkgewogIHBhZGRpbmctcmlnaHQ6IDIwcHg7Cn0KLl8xbW9yN3ZleCB7CiAgbWFyZ2luLXRvcDogLTFweDsKICBtYXJnaW4tbGVmdDogLTFweDsKfQpAbWVkaWEgKG1pbi13aWR0aDogMTAyNHB4KSB7CiAgLl8xbW9yN3ZlOSB7CiAgICB3aWR0aDogNDAlOwogIH0KfQ==\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted/dist/vanilla-extract-webpack-plugin-extracted.cjs.js\"\nexport var section = '_1mor7ve1 rgw6ez294 rgw6ez27p rgw6ez2em rgw6ez2d7';\nexport var bannerWrap = '_1mor7ve3 rgw6ez43m rgw6ez6je rgw6ez1am';\nexport var bannerOverlay = '_1mor7ve5 rgw6ez43a rgw6ez45m rgw6ez14g rgw6ez5ns rgw6ez2z4 rgw6ez3a4';\nexport var collectionName = '_1mor7ve7 rgw6ez40m rgw6ez6je rgw6ez40a rgw6ez40g rgw6ez3zs rgw6ez46m';\nexport var collectionDetails = '_1mor7ve9 rgw6ez14g';\nexport var volumeRank = '_1mor7veb rgw6ez2jg rgw6ez22y rgw6ez2em rgw6ez294 rgw6ez4b4 rgw6ez4fs';\nexport var exploreCollection = '_1mor7ved rgw6ez46m rgw6ezw4 rgw6ez69u rgw6ez2pa rgw6ez2em rgw6ez294';\nexport var carouselIndicator = 'rgw6ez114 rgw6ez15y rgw6ezos rgw6ez6au rgw6ez3zs';\nexport var activityRow = '_1mor7veg rgw6ez43a rgw6ez2y rgw6ez36';\nexport var activeRow = 'rgw6ez5ny';\nexport var timestamp = 'rgw6ez43a rgw6ezaa rgw6ez4dy rgw6ez39y rgw6ez35u rgw6ez32s rgw6ez34i rgw6ez3ca rgw6ez3fi';\nexport var marketplaceIcon = '_1mor7vel rgw6ezzy rgw6ez16g rgw6ez69i rgw6ez3sm rgw6ezjg';\nexport var table = '_1mor7ven rgw6ez14g rgw6ez69u rgw6ez68y';\nexport var thead = 'rgw6ezpa rgw6ez4xg rgw6ez6i2 rgw6ez69a';\nexport var th = '_1mor7veq rgw6ezca rgw6ezaa rgw6ez6m6 rgw6ez48m rgw6ez48h rgw6ez68q rgw6ez2js rgw6ez23a';\nexport var tr = 'rgw6ez68q';\nexport var rank = 'rgw6ez48m rgw6ez43a rgw6ez3zt rgw6ez3z4 rgw6ez314 rgw6ez3by';\nexport var td = '_1mor7veu rgw6ezca rgw6ezam rgw6ez6me rgw6ez1gg rgw6ez2jm rgw6ez234 rgw6ez40s rgw6ez43m';\nexport var trendingOptions = 'rgw6ezfg rgw6ez184 rgw6ez69u rgw6ez6ia rgw6ez692 rgw6ez4xg';\nexport var trendingOption = '_1mor7vex rgw6ez294 rgw6ez2em rgw6ez2jy rgw6ez23g rgw6ez69u rgw6ezaa rgw6ez3zs rgw6ez68q';\nexport var trendingOptionActive = 'rgw6ez5ps';","import clsx from 'clsx'\nimport { Box } from 'nft/components/Box'\nimport { Column, Row } from 'nft/components/Flex'\nimport { ActivityFetcher } from 'nft/queries'\nimport { ActivityEvent, ActivityEventTypeDisplay, Markets } from 'nft/types'\nimport { formatEthPrice } from 'nft/utils/currency'\nimport { getTimeDifference, isValidDate } from 'nft/utils/date'\nimport { putCommas } from 'nft/utils/putCommas'\nimport { useEffect, useMemo, useReducer, useState } from 'react'\nimport { useQuery } from 'react-query'\nimport { useNavigate } from 'react-router-dom'\n\nimport * as styles from './Explore.css'\n\nconst ActivityFeed = ({ address }: { address: string }) => {\n  const [current, setCurrent] = useState(0)\n  const [hovered, toggleHover] = useReducer((state) => !state, false)\n  const navigate = useNavigate()\n  const { data: collectionActivity } = useQuery(['collectionActivity', address], () => ActivityFetcher(address), {\n    staleTime: 5000,\n  })\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (collectionActivity && !hovered) setCurrent(current === collectionActivity.events.length - 1 ? 0 : current + 1)\n    }, 3000)\n    return () => clearInterval(interval)\n  }, [current, collectionActivity, hovered])\n\n  return (\n    <Column\n      borderRadius=\"20\"\n      overflow=\"hidden\"\n      onMouseEnter={toggleHover}\n      onMouseLeave={toggleHover}\n      marginTop=\"40\"\n      style={{ background: 'rgba(13, 14, 14, 0.7)', height: '270px', width: '60%' }}\n    >\n      {collectionActivity ? (\n        <Box display=\"flex\" flexDirection=\"row\" flexWrap=\"nowrap\" overflow=\"hidden\">\n          <Column padding=\"20\" style={{ maxWidth: '286px' }}>\n            <Box\n              as=\"img\"\n              src={collectionActivity.events[current].tokenMetadata?.imageUrl}\n              borderRadius=\"12\"\n              style={{ width: '230px', height: '230px' }}\n              onClick={(e) => {\n                e.preventDefault()\n                e.stopPropagation()\n                navigate(`/nfts/asset/${address}/${collectionActivity.events[current].tokenId}?origin=explore`)\n              }}\n            />\n          </Column>\n          <Column width=\"full\" position=\"relative\">\n            {collectionActivity.events.map((activityEvent: ActivityEvent, index: number) => {\n              return <ActivityRow event={activityEvent} index={index} key={index} current={current} />\n            })}\n          </Column>\n        </Box>\n      ) : null}\n    </Column>\n  )\n}\n\nconst ActivityRow = ({ event, index, current }: { event: ActivityEvent; index: number; current: number }) => {\n  const navigate = useNavigate()\n\n  const formattedPrice = useMemo(\n    () => (event.price ? putCommas(formatEthPrice(event.price)).toString() : null),\n    [event.price]\n  )\n\n  const scrollPosition = useMemo(() => {\n    const itemHeight = 56\n    if (current === index) return current === 0 ? 0 : itemHeight / 2\n    if (index > current)\n      return current === 0 ? (index - current) * itemHeight : (index - current) * itemHeight + itemHeight / 2\n    if (index < current)\n      return current === 0 ? -(current - index) * itemHeight : -((current - index) * itemHeight - itemHeight / 2)\n    else return 0\n  }, [index, current])\n\n  return (\n    <Row\n      className={clsx(styles.activityRow, index === current && styles.activeRow)}\n      paddingTop=\"8\"\n      paddingBottom=\"8\"\n      fontSize=\"14\"\n      width=\"full\"\n      paddingLeft=\"16\"\n      style={{ transform: `translateY(${scrollPosition}px)` }}\n      onClick={(e) => {\n        e.preventDefault()\n        e.stopPropagation()\n        navigate(`/nfts/asset/${event.collectionAddress}/${event.tokenId}?origin=explore`)\n      }}\n    >\n      <Box as=\"img\" src={event.tokenMetadata?.imageUrl} borderRadius=\"12\" marginRight=\"8\" width=\"40\" height=\"40\" />\n      <Box as=\"span\" color=\"explicitWhite\">\n        <Box as=\"span\">{ActivityEventTypeDisplay[event.eventType]}</Box>\n        <Box as=\"span\" color=\"grey300\" paddingLeft=\"4\" paddingRight=\"4\">\n          for\n        </Box>\n        {formattedPrice} ETH\n      </Box>\n\n      {event.eventTimestamp && isValidDate(event.eventTimestamp) && (\n        <Box className={styles.timestamp}>\n          {getTimeDifference(event.eventTimestamp?.toString())}\n          {event.marketplace && <MarketplaceIcon marketplace={event.marketplace} />}\n        </Box>\n      )}\n    </Row>\n  )\n}\n\nexport default ActivityFeed\n\nconst MarketplaceIcon = ({ marketplace }: { marketplace: Markets }) => {\n  return (\n    <Box\n      as=\"img\"\n      alt={marketplace}\n      src={`/nft/svgs/marketplaces/${marketplace}.svg`}\n      className={styles.marketplaceIcon}\n    />\n  )\n}\n","import clsx from 'clsx'\nimport { useWindowSize } from 'hooks/useWindowSize'\nimport { Box } from 'nft/components/Box'\nimport { Center, Column, Row } from 'nft/components/Flex'\nimport { VerifiedIcon } from 'nft/components/icons'\nimport { bodySmall, buttonMedium, headlineLarge } from 'nft/css/common.css'\nimport { breakpoints, vars } from 'nft/css/sprinkles.css'\nimport { ActivityFetcher, fetchTrendingCollections } from 'nft/queries'\nimport { TimePeriod, TrendingCollection } from 'nft/types'\nimport { formatEthPrice } from 'nft/utils/currency'\nimport { putCommas } from 'nft/utils/putCommas'\nimport { formatChange, toSignificant } from 'nft/utils/toSignificant'\nimport { useEffect, useState } from 'react'\nimport { QueryClient, useQuery } from 'react-query'\nimport { Link } from 'react-router-dom'\n\nimport ActivityFeed from './ActivityFeed'\nimport * as styles from './Explore.css'\n\nconst queryClient = new QueryClient()\n\nconst Banner = () => {\n  /* Sets initially displayed collection to random number between 0 and 4  */\n  const [current, setCurrent] = useState(Math.floor(Math.random() * 5))\n  const [hovered, setHover] = useState(false)\n  const { width: windowWidth } = useWindowSize()\n  const { data: collections } = useQuery(\n    ['trendingCollections'],\n    () => {\n      return fetchTrendingCollections({ volumeType: 'eth', timePeriod: TimePeriod.OneDay, size: 5 })\n    },\n    {\n      refetchOnReconnect: false,\n      refetchOnWindowFocus: false,\n      refetchOnMount: false,\n    }\n  )\n\n  useEffect(() => {\n    /* Rotate through Top 5 Collections on 15 second interval */\n    let stale = false\n    if (hovered || stale) return\n    const interval = setInterval(async () => {\n      if (collections) {\n        const nextCollectionIndex = (current + 1) % collections.length\n        const nextCollectionAddress = collections[nextCollectionIndex].address\n        setCurrent(nextCollectionIndex)\n        await queryClient.prefetchQuery(['collectionActivity', nextCollectionAddress], () =>\n          ActivityFetcher(nextCollectionAddress as string)\n        )\n      }\n    }, 15_000)\n    return () => {\n      stale = true\n      clearInterval(interval)\n    }\n  }, [current, collections, hovered])\n\n  return (\n    <Box onMouseEnter={() => setHover(true)} onMouseLeave={() => setHover(false)} cursor=\"pointer\" width=\"full\">\n      {collections && collections[current] ? (\n        <Link to={`/nfts/collection/${collections[current].address}`} style={{ textDecoration: 'none' }}>\n          <Box style={{ height: '386px' }}>\n            <div\n              className={styles.bannerWrap}\n              style={{ backgroundImage: `url(${collections[current].bannerImageUrl})` }}\n            >\n              <Box className={styles.bannerOverlay} width=\"full\" />\n              <Box as=\"section\" className={styles.section} display=\"flex\" flexDirection=\"row\" flexWrap=\"nowrap\">\n                <CollectionDetails collection={collections[current]} hovered={hovered} rank={current + 1} />\n                {windowWidth && windowWidth > breakpoints.lg && <ActivityFeed address={collections[current].address} />}\n              </Box>\n\n              <CarouselProgress length={collections.length} currentIndex={current} setCurrent={setCurrent} />\n            </div>\n          </Box>\n        </Link>\n      ) : (\n        <>\n          {/* TODO: Improve Loading State */}\n          <p>Loading</p>\n        </>\n      )}\n    </Box>\n  )\n}\n\nexport default Banner\n\n/* Collection Details: displays collection stats within Banner  */\nconst CollectionDetails = ({\n  collection,\n  rank,\n  hovered,\n}: {\n  collection: TrendingCollection\n  rank: number\n  hovered: boolean\n}) => (\n  <Column className={styles.collectionDetails} paddingTop=\"40\">\n    <div className={styles.volumeRank}>#{rank} volume in 24hr</div>\n    <Row>\n      <Box as=\"span\" marginTop=\"16\" className={clsx(headlineLarge, styles.collectionName)}>\n        {collection.name}\n      </Box>\n      {collection.isVerified && (\n        <Box as=\"span\" marginTop=\"24\">\n          <VerifiedIcon height=\"32\" width=\"32\" />\n        </Box>\n      )}\n    </Row>\n    <Row className={bodySmall} marginTop=\"12\" color=\"explicitWhite\">\n      <Box>\n        <Box as=\"span\" color=\"textSecondary\" marginRight=\"4\">\n          Floor:\n        </Box>\n        {collection.floor ? formatEthPrice(collection.floor.toString()) : '--'} ETH\n      </Box>\n      <Box>\n        {collection.floorChange ? (\n          <Box as=\"span\" color={collection.floorChange > 0 ? 'green200' : 'accentFailure'} marginLeft=\"4\">\n            {collection.floorChange > 0 && '+'}\n            {formatChange(collection.floorChange)}%\n          </Box>\n        ) : null}\n      </Box>\n      <Box marginLeft=\"24\" color=\"explicitWhite\">\n        <Box as=\"span\" color=\"textSecondary\" marginRight=\"4\">\n          Volume:\n        </Box>\n        {collection.volume ? putCommas(+toSignificant(collection.volume.toString())) : '--'} ETH\n      </Box>\n      <Box>\n        {collection.volumeChange ? (\n          <Box as=\"span\" color={collection.volumeChange > 0 ? 'green200' : 'accentFailure'} marginLeft=\"4\">\n            {collection.volumeChange > 0 && '+'}\n            {formatChange(collection.volumeChange)}%\n          </Box>\n        ) : null}\n      </Box>\n    </Row>\n    <Link\n      className={clsx(buttonMedium, styles.exploreCollection)}\n      to={`/nfts/collection/${collection.address}`}\n      style={{ textDecoration: 'none', backgroundColor: `${hovered ? vars.color.blue400 : vars.color.grey700}` }}\n    >\n      Explore collection\n    </Link>\n  </Column>\n)\n\n/* Carousel Progress indicators */\nconst CarouselProgress = ({\n  length,\n  currentIndex,\n  setCurrent,\n}: {\n  length: number\n  currentIndex: number\n  setCurrent: React.Dispatch<React.SetStateAction<number>>\n}) => (\n  <Center marginTop=\"16\">\n    {Array(length)\n      .fill(null)\n      .map((value, carouselIndex) => (\n        <Box\n          cursor=\"pointer\"\n          paddingTop=\"16\"\n          paddingBottom=\"16\"\n          position=\"relative\"\n          onClick={(e) => {\n            e.preventDefault()\n            e.stopPropagation()\n            setCurrent(carouselIndex)\n          }}\n          key={carouselIndex}\n        >\n          <Box\n            as=\"span\"\n            className={styles.carouselIndicator}\n            display=\"inline-block\"\n            backgroundColor={currentIndex === carouselIndex ? 'explicitWhite' : 'accentTextLightTertiary'}\n          />\n        </Box>\n      ))}\n  </Center>\n)\n","import { ethNumberStandardFormatter, formatWeiToDecimal } from '../../../utils/currency'\nimport { putCommas } from '../../../utils/putCommas'\nimport { formatChange } from '../../../utils/toSignificant'\nimport { Box } from '../../Box'\nimport { Column, Row } from '../../Flex'\nimport { VerifiedIcon } from '../../icons'\nimport * as styles from './Cells.css'\n\ninterface CellProps {\n  value: {\n    logo?: string\n    name?: string\n    address?: string\n    isVerified?: boolean\n    value?: number\n    change?: number\n  }\n}\n\nexport const CollectionTitleCell = ({ value }: CellProps) => {\n  return (\n    <Row as=\"span\" style={{ marginLeft: '52px' }}>\n      <img className={styles.logo} src={value.logo} alt={`${value.name} logo`} height={44} width={44} />\n      <span className={styles.title}>{value.name}</span>\n      {value.isVerified && (\n        <span className={styles.verifiedBadge}>\n          <VerifiedIcon />\n        </span>\n      )}\n    </Row>\n  )\n}\n\nexport const WithCommaCell = ({ value }: CellProps) => <span>{value.value ? putCommas(value.value) : '-'}</span>\n\nexport const EthCell = ({ value }: { value: number }) => (\n  <Row justifyContent=\"flex-end\" color=\"textPrimary\">\n    {value ? <>{formatWeiToDecimal(value.toString(), true)} ETH</> : '-'}\n  </Row>\n)\n\nexport const VolumeCell = ({ value }: CellProps) => (\n  <Row justifyContent=\"flex-end\" color=\"textPrimary\">\n    {value.value ? <>{ethNumberStandardFormatter(value.value.toString())} ETH</> : '-'}\n  </Row>\n)\n\nexport const EthWithDayChange = ({ value }: CellProps) => (\n  <Column gap=\"4\">\n    <VolumeCell value={{ value: value.value }} />\n    {value.change ? (\n      <Box\n        as=\"span\"\n        color={value.change > 0 ? 'green' : 'accentFailure'}\n        fontWeight=\"normal\"\n        fontSize=\"12\"\n        position=\"relative\"\n      >\n        {value.change > 0 && '+'}\n        {formatChange(value.change)}%\n      </Box>\n    ) : null}\n  </Column>\n)\n\nexport const WeiWithDayChange = ({ value }: CellProps) => (\n  <Column gap=\"4\">\n    <Row justifyContent=\"flex-end\" color=\"textPrimary\">\n      {value && value.value ? <>{formatWeiToDecimal(value.value.toString(), true)} ETH</> : '-'}\n    </Row>\n    {value.change ? (\n      <Box\n        as=\"span\"\n        color={value.change > 0 ? 'green' : 'accentFailure'}\n        fontWeight=\"normal\"\n        fontSize=\"12\"\n        position=\"relative\"\n      >\n        {value.change > 0 && '+'}\n        {formatChange(value.change)}%\n      </Box>\n    ) : null}\n  </Column>\n)\n\nexport const CommaWithDayChange = ({ value }: CellProps) => (\n  <Column gap=\"4\">\n    <WithCommaCell value={value} />\n    {value.change ? (\n      <Box\n        as=\"span\"\n        color={value.change > 0 ? 'green' : 'accentFailure'}\n        fontWeight=\"normal\"\n        fontSize=\"12\"\n        position=\"relative\"\n      >\n        {value.change > 0 && '+'}\n        {formatChange(value.change)}%\n      </Box>\n    ) : null}\n  </Column>\n)\n","import clsx from 'clsx'\nimport { useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { Column, IdType, useSortBy, useTable } from 'react-table'\nimport { isMobile } from 'utils/userAgent'\n\nimport { Box } from '../../components/Box'\nimport { CollectionTableColumn } from '../../types'\nimport { ArrowRightIcon } from '../icons'\nimport { ColumnHeaders } from './CollectionTable'\nimport * as styles from './Explore.css'\n\ninterface TableProps<D extends Record<string, unknown>> {\n  columns: Column<CollectionTableColumn>[]\n  data: CollectionTableColumn[]\n  hiddenColumns: IdType<D>[]\n  classNames?: {\n    td: string\n  }\n}\n\nexport function Table<D extends Record<string, unknown>>({\n  columns,\n  data,\n  hiddenColumns,\n  classNames,\n  ...props\n}: TableProps<D>) {\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow, setHiddenColumns } = useTable(\n    {\n      columns,\n      data,\n      initialState: {\n        sortBy: [\n          {\n            desc: true,\n            id: ColumnHeaders.Volume,\n          },\n        ],\n      },\n      ...props,\n    },\n    useSortBy\n  )\n\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    if (hiddenColumns && isMobile) {\n      setHiddenColumns(hiddenColumns)\n    } else {\n      setHiddenColumns([])\n    }\n  }, [hiddenColumns, setHiddenColumns])\n\n  return (\n    <table {...getTableProps()} className={styles.table}>\n      <thead className={styles.thead}>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()} key={headerGroup.id}>\n            {headerGroup.headers.map((column, index) => {\n              return (\n                <th\n                  className={styles.th}\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                  style={{\n                    textAlign: index === 0 ? 'left' : 'right',\n                    paddingLeft: index === 0 ? '52px' : 0,\n                  }}\n                  key={index}\n                >\n                  <Box as=\"span\" color=\"accentAction\" position=\"relative\">\n                    {column.isSorted ? (\n                      column.isSortedDesc ? (\n                        <ArrowRightIcon style={{ transform: 'rotate(90deg)', position: 'absolute' }} />\n                      ) : (\n                        <ArrowRightIcon style={{ transform: 'rotate(-90deg)', position: 'absolute' }} />\n                      )\n                    ) : (\n                      ''\n                    )}\n                  </Box>\n                  <Box as=\"span\" paddingLeft={column.isSorted ? '18' : '0'}>\n                    {column.render('Header')}\n                  </Box>\n                </th>\n              )\n            })}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row)\n\n          return (\n            <tr\n              className={styles.tr}\n              {...row.getRowProps()}\n              key={i}\n              onClick={() => navigate(`/nfts/collection/${row.original.collection.address}`)}\n            >\n              {row.cells.map((cell, cellIndex) => {\n                return (\n                  <td className={clsx(styles.td, classNames?.td)} {...cell.getCellProps()} key={cellIndex}>\n                    {cellIndex === 0 ? <span className={styles.rank}>{i + 1}</span> : null}\n                    {cell.render('Cell')}\n                  </td>\n                )\n              })}\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n  )\n}\n","import \"src/nft/css/sprinkles.css.ts.vanilla.css!=!../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/sprinkles.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#\\\"}!../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted/dist/vanilla-extract-webpack-plugin-extracted.cjs.js\"\nimport \"src/nft/css/common.css.ts.vanilla.css!=!../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/common.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#H4sIAAAAAAAAE41UwY6bMBC95yusXa2USGsESZZsnFMvvfbQD6gMHogFsaltEjZV/71jh24x3Va5mZnnN+/NeEi+Zetd+3oUNfmxIKTQRoBhRGkFh8XPRfKeZkd9BhNAZW+sRlCnpXJgZjghLS9aEBGU905HOBnSHRdCqpqRbNsNJHvthhgUk+mOl9K9MZImmwjXxGRr5JpTNTNduvWyztwsKa1BSaAhZGnBy6Y2ulfia28qXsLq4PvyHqX3XP3Su1Yqf3UiQc0s773lndfp+z5QK68hcZsBxZDPOBgc5a2sFSMtVC6i1IHSGa5spc2JEVvyFpZZsn6Ja3eMFYAQGN3j3JRj5OHBl+i0lU5qLMALq9vegY9KZQEhaWwfRaAxbmhtuJBIstxnyTYXUD+Tx22+23z+RNInPO/zbY7nLE2TbPO0mrkav8ZeBgMdN0jnk/QCRSMdPXHb/F3vsaoqkpJ09buVnvP537DDnBKrnoJlYGTQJuTncRjKthcwkWrdW4sJ7I8Uk/BFCnfEYXZTW15Dbxm28AhGuluPw65QOKM4+8GCfY8m9OepT9WHPo2jGhG4C+sXS4DbIJae9PUumL0D9X8E1b2bOQi/iI99ZBHUTv4m07d1WypTX3K4ZtI/4V+iqJeToAQAAA==\\\"}!../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted/dist/vanilla-extract-webpack-plugin-extracted.cjs.js\"\nexport var logo = 'rgw6ez69u';\nexport var title = 'rgw6ezca rgw6ezam rgw6ez6me rgw6ez48g rgw6ez40m rgw6ez6je rgw6ez40a rgw6ez40g rgw6ez28s rgw6ez2dg';\nexport var openAddress = 'rgw6ez1js rgw6ez16s rgw6ez10a';\nexport var address = 'rgw6ezca rgw6ezam rgw6ez6me rgw6ez48g rgw6ez40m rgw6ez6je rgw6ez40a rgw6ez40g rgw6ez28s rgw6ez2dg rgw6ezjg rgw6ez34 rgw6ez1im rgw6ez14s';\nexport var verifiedBadge = 'rgw6ez3zs rgw6ez2j4 rgw6ez17a rgw6ez10s rgw6ez40m';","import clsx from 'clsx'\nimport { useMemo, useState } from 'react'\nimport { useQuery } from 'react-query'\n\nimport { Box } from '../../components/Box'\nimport { Column, Row } from '../../components/Flex'\nimport { headlineMedium } from '../../css/common.css'\nimport { fetchTrendingCollections } from '../../queries'\nimport { CollectionTableColumn, TimePeriod, VolumeType } from '../../types'\nimport CollectionTable from './CollectionTable'\nimport * as styles from './Explore.css'\n\nconst timeOptions: { label: string; value: TimePeriod }[] = [\n  { label: '24 hour', value: TimePeriod.OneDay },\n  { label: '7 day', value: TimePeriod.SevenDays },\n  { label: '30 day', value: TimePeriod.ThirtyDays },\n  { label: 'All time', value: TimePeriod.AllTime },\n]\n\nconst TrendingCollections = () => {\n  const [timePeriod, setTimePeriod] = useState<TimePeriod>(TimePeriod.OneDay)\n\n  const { isSuccess, data } = useQuery(\n    ['trendingCollections', timePeriod],\n    () => {\n      return fetchTrendingCollections({ volumeType: 'eth', timePeriod, size: 100 })\n    },\n    {\n      refetchOnReconnect: false,\n      refetchOnWindowFocus: false,\n      refetchOnMount: false,\n      refetchInterval: 5000,\n    }\n  )\n\n  const trendingCollections = useMemo(() => {\n    if (isSuccess && data) {\n      return data.map((d) => ({\n        ...d,\n        collection: {\n          name: d.name,\n          logo: d.imageUrl,\n          address: d.address,\n          isVerified: d.isVerified,\n        },\n        volume: {\n          value: d.volume,\n          change: d.volumeChange,\n          type: 'eth' as VolumeType,\n        },\n        floor: {\n          value: d.floor,\n          change: d.floorChange,\n        },\n        owners: {\n          value: d.owners,\n          change: d.ownersChange,\n        },\n        sales: d.sales,\n        totalSupply: d.totalSupply,\n      }))\n    } else return [] as CollectionTableColumn[]\n  }, [data, isSuccess])\n\n  return (\n    <Box width=\"full\" className={styles.section}>\n      <Column width=\"full\">\n        <Row>\n          <Box as=\"h2\" className={headlineMedium} marginTop=\"88\">\n            Trending Collections\n          </Box>\n        </Row>\n        <Row>\n          <Box className={styles.trendingOptions}>\n            {timeOptions.map((timeOption) => {\n              return (\n                <span\n                  className={clsx(\n                    styles.trendingOption,\n                    timeOption.value === timePeriod && styles.trendingOptionActive\n                  )}\n                  key={timeOption.value}\n                  onClick={() => setTimePeriod(timeOption.value)}\n                >\n                  {timeOption.label}\n                </span>\n              )\n            })}\n          </Box>\n        </Row>\n        <Row paddingBottom=\"52\">{data ? <CollectionTable data={trendingCollections} /> : <p>Loading</p>}</Row>\n      </Column>\n    </Box>\n  )\n}\n\nexport default TrendingCollections\n","import Banner from 'nft/components/explore/Banner'\nimport TrendingCollections from 'nft/components/explore/TrendingCollections'\n\nconst NftExplore = () => {\n  return (\n    <>\n      <Banner />\n      <TrendingCollections />\n    </>\n  )\n}\n\nexport default NftExplore\n"],"sourceRoot":""}